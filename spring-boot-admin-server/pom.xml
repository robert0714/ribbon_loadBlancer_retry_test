<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>spring-boot-admin-server</artifactId>
	<packaging>war</packaging>

	<name>spring-boot-admin-server</name>
	<description>Spring Boot Admin Server</description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.5.RELEASE</version>
	</parent>

	<properties>
	    <maven.test.skip>true</maven.test.skip>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Finchley.SR1</spring-cloud.version> 
		<spring-boot-admin-server.version>2.0.3</spring-boot-admin-server.version>
		<spring-boot-admin-starter-client.version>2.0.3</spring-boot-admin-starter-client.version>
		<maven.build.timestamp.format>yyyy-MM-dd-HH-mm</maven.build.timestamp.format>
		<!-- windows要先安裝Docker-toolbox -->
		<!-- https://download.docker.com/win/stable/DockerToolbox.exe -->
		<!-- mvn docker:help -->
		<!-- docker-machine rm default -->
		<!-- docker-machine create \ -\ -virtualbox-memory 4096 default -->
		<!-- eval $( docker-machine env default ) -->
		<!-- mvn clean package docker:build -->
		<!-- mvn docker:start -->
		<!-- For Docker hub leave empty; use "localhost:5000/" for a local Docker 
			Registry -->
		<docker.registry.name>robert0714</docker.registry.name>
		<docker.repository.name>${docker.registry.name}/${project.artifactId}</docker.repository.name>
		<docker-maven-plugin.version>0.27.2</docker-maven-plugin.version>
		<docker.image.version>dev</docker.image.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!-- dependencies used to enable admin server and UI -->
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-server</artifactId>
			<version>${spring-boot-admin-server.version}</version>
		</dependency>
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-server-ui</artifactId>
			<version>${spring-boot-admin-server.version}</version>
		</dependency>		 
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>com.hazelcast</groupId>
			<artifactId>hazelcast</artifactId>
		</dependency>
		<!--declare the admin server as a client, for self monitoring -->
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
			<version>${spring-boot-admin-starter-client.version}</version>
		</dependency>
		<!--mail notifications -->
		<!--<dependency> -->
		<!--<groupId>org.springframework.boot</groupId> -->
		<!--<artifactId>spring-boot-starter-mail</artifactId> -->
		<!--</dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		 
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.baeldung.springbootadminserver.SpringBootAdminServerApplication</mainClass>
					<executable>true</executable>
				</configuration>
				<executions>
					<execution>
						<goals>
						    <goal>build-info</goal>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<classifier>exec</classifier>
						</configuration>
					</execution>
				</executions>
				 
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>			 
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin.version}</version>
				<configuration>
					<skip>false</skip>
					<skipMachine>false</skipMachine>
					<skipBuild>false</skipBuild>
					<skipRun>false</skipRun>
					<images>
						<image>
							<name>${docker.repository.name}:${docker.image.version}</name>
							<alias>${project.artifactId}</alias>
							<build>
								<from>library/openjdk:8u181-jdk</from>
								<maintainer>robert0714</maintainer>
								<assembly>
									<descriptor>docker-assembly.xml</descriptor>
								</assembly>
								<ports>
									<port>8080</port>
								</ports>
								<cmd>
									<exec>
										<arg>java</arg>
										<arg>-jar</arg>
										<arg>/maven/${project.build.finalName}-exec.war</arg>
										<arg>--java.security.egd=file:/dev/./urandom </arg>
									</exec>
								</cmd>
							</build>
							<run>
								<namingStrategy>alias</namingStrategy>
								<net>host</net>
								<log>
									<prefix>${project.artifactId}</prefix>
									<color>cyan</color>
								</log>
								<env>
									<TZ>Asia/Taipei</TZ>
								</env>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
</project>
